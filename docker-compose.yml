services:
    laravel.test:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8000}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            mysql:
                condition: service_healthy
            reverb:
                condition: service_started
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3307}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - "8081:80"
        environment:
            PMA_HOST: mysql
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
        depends_on:
            - mysql
        networks:
            - sail
    laravel-queue-worker:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        command: sh -c "php /var/www/html/artisan queue:work --queue=transfer_in,deposit,notification,email,default --verbose --tries=5 --timeout=90"
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            APP_ENV: '${APP_ENV}'
            DB_CONNECTION: '${DB_CONNECTION}'
            DB_HOST: '${DB_HOST}'
            DB_PORT: '${DB_PORT}'
            DB_DATABASE: '${DB_DATABASE}'
            DB_USERNAME: '${DB_USERNAME}'
            DB_PASSWORD: '${DB_PASSWORD}'
            QUEUE_CONNECTION: 'database'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            mysql:
                condition: service_healthy
        restart: unless-stopped

    reverb:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        command: php artisan reverb:start --host=0.0.0.0 --port=${REVERB_PORT:-8080}
        ports:
            - '${REVERB_PORT:-8080}:${REVERB_PORT:-8080}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            APP_ENV: '${APP_ENV}'

            REVERB_APP_ID: '${REVERB_APP_ID}'
            REVERB_APP_KEY: '${REVERB_APP_KEY}'
            REVERB_APP_SECRET: '${REVERB_APP_SECRET}'
            REVERB_HOST: '0.0.0.0'
            REVERB_PORT: '${REVERB_PORT:-8080}'
            REVERB_SCHEME: '${REVERB_SCHEME:-http}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            mysql:
                condition: service_healthy
        restart: unless-stopped
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
